import{a as r,b as e}from"./index.645b5434.js";var n=r.exports.Buffer;var o=function(r){if(r.length>=255)throw new TypeError("Alphabet too long");for(var e=new Uint8Array(256),o=0;o<e.length;o++)e[o]=255;for(var t=0;t<r.length;t++){var a=r.charAt(t),f=a.charCodeAt(0);if(255!==e[f])throw new TypeError(a+" is ambiguous");e[f]=t}var i=r.length,c=r.charAt(0),u=Math.log(i)/Math.log(256),h=Math.log(256)/Math.log(i);function v(r){if("string"!=typeof r)throw new TypeError("Expected String");if(0===r.length)return n.alloc(0);var o=0;if(" "!==r[o]){for(var t=0,a=0;r[o]===c;)t++,o++;for(var f=(r.length-o)*u+1>>>0,h=new Uint8Array(f);r[o];){var v=e[r.charCodeAt(o)];if(255===v)return;for(var d=0,s=f-1;(0!==v||d<a)&&-1!==s;s--,d++)v+=i*h[s]>>>0,h[s]=v%256>>>0,v=v/256>>>0;if(0!==v)throw new Error("Non-zero carry");a=d,o++}if(" "!==r[o]){for(var l=f-a;l!==f&&0===h[l];)l++;var g=n.allocUnsafe(t+(f-l));g.fill(0,0,t);for(var w=t;l!==f;)g[w++]=h[l++];return g}}}return{encode:function(e){if((Array.isArray(e)||e instanceof Uint8Array)&&(e=n.from(e)),!n.isBuffer(e))throw new TypeError("Expected Buffer");if(0===e.length)return"";for(var o=0,t=0,a=0,f=e.length;a!==f&&0===e[a];)a++,o++;for(var u=(f-a)*h+1>>>0,v=new Uint8Array(u);a!==f;){for(var d=e[a],s=0,l=u-1;(0!==d||s<t)&&-1!==l;l--,s++)d+=256*v[l]>>>0,v[l]=d%i>>>0,d=d/i>>>0;if(0!==d)throw new Error("Non-zero carry");t=s,a++}for(var g=u-t;g!==u&&0===v[g];)g++;for(var w=c.repeat(o);g<u;++g)w+=r.charAt(v[g]);return w},decodeUnsafe:v,decode:function(r){var e=v(r);if(e)return e;throw new Error("Non-base"+i+" character")}}}("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"),t=o,a=r.exports.Buffer,f=e;var i=function(r){function e(e){var n=e.slice(0,-4),o=e.slice(-4),t=r(n);if(!(o[0]^t[0]|o[1]^t[1]|o[2]^t[2]|o[3]^t[3]))return n}return{encode:function(e){var n=r(e);return t.encode(a.concat([e,n],e.length+4))},decode:function(r){var n=e(t.decode(r));if(!n)throw new Error("Invalid checksum");return n},decodeUnsafe:function(r){var n=t.decodeUnsafe(r);if(n)return e(n)}}}((function(r){var e=f("sha256").update(r).digest();return f("sha256").update(e).digest()}));export{o as a,i as b};
